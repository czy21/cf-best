<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cfbest.server.mapper.CFCDNIPMapper">

   <select id="selectCursorByTelegramMessageId" resultType="com.cfbest.server.model.po.CFCDNIPPO">
     select
         ci.*
     from cf_cdn_ip ci
     <where>
         ci.telegram_message_id = #{telegramMessageId}
         and ci.region is null
     </where>
   </select>
    <update id="updateByValueStrAndNoRegion" parameterType="com.cfbest.server.model.po.CFCDNIPPO">
        update cf_cdn_ip
        <set>
            <if test="valueStr != null">
                value_str = #{valueStr},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="country != null">
                country = #{country},
            </if>
            <if test="countryCode != null">
                country_code = #{countryCode},
            </if>
            <if test="region != null">
                region = #{region},
            </if>
            <if test="regionName != null">
                region_name = #{regionName},
            </if>
            <if test="city != null">
                city = #{city},
            </if>
            <if test="isp != null">
                isp = #{isp},
            </if>
            <if test="telegramMessageId != null">
                telegram_message_id = #{telegramMessageId},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser},
            </if>
        </set>
        where value_str = #{valueStr} and country is null
    </update>

    <insert id="copyToView">
        INSERT INTO cf_cdn_ip_view (value_str, `type`, country, country_code, region, region_name, city, isp)
        select
            distinct ci.value_str, ci.`type`, ci.country, ci.country_code, ci.region, ci.region_name, ci.city, ci.isp
        from cf_cdn_ip ci
        inner join telegram_message tm on tm.id = ci.telegram_message_id
        where tm.message_time between #{timeInterval[0]} and #{timeInterval[1]}
    </insert>

    <insert id="aggByCountry">
        delete from cf_cdn_ip_stat where date = #{date};
        insert into cf_cdn_ip_stat(date,country,value)
        select
            #{date},
            ci.country,
            count(0) as value
        from cf_cdn_ip_view ci
        group by ci.country
    </insert>

    <select id="selectListBy" resultType="com.cfbest.server.model.po.CFCDNIPPO">
        select
            iv.*
        from cf_cdn_ip_view iv
        <where>
            <foreach collection="locations" item="t">
                <if test="t.size() == 1">
                    or (iv.country = '${t[0]}')
                </if>
                <if test="t.size() == 2">
                    or (iv.country = '${t[0]}' and iv.city = '${t[1]}')
                </if>
            </foreach>
            <if test="valueStr !=null and valueStr != ''">
                and iv.value_str = #{valueStr}
            </if>
        </where>
        order by iv.country,iv.city
    </select>

    <select id="selectListGroupByCountryAndCity" resultType="com.cfbest.server.model.po.CFCDNIPPO">
        select
            iv.country,iv.city
        from cf_cdn_ip_view iv
        group by iv.country,iv.city
        order by iv.country,iv.city
    </select>
    <select id="selectListForAggCountry" resultType="com.cfbest.server.model.dto.CFAggCountryDTO">
        select
            cs.country as name,
            cs.value
        from cf_cdn_ip_stat cs
        where cs.date = (select date(ci.create_time) from cf_cdn_ip_view ci limit 1)
    </select>
    <select id="selectListGroupByDateAndCountry" resultType="com.cfbest.server.model.po.CFIPStat">
        select
            cs.date,cs.country,
            sum(value) as value
        from cf_cdn_ip_stat cs
        where cs.date between #{dateInterval[0]} and #{dateInterval[1]}
        group by cs.date,cs.country
    </select>
</mapper>
